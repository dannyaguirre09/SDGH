
@{
	ViewBag.Title = "TimeLine";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-5">
	<div id="wizard" class="pt-5 form_wizard wizard_horizontal">
		<ul class="wizard_steps anchor">
			<li>
				<a href="#step-1" class="done" isdone="1" rel="1">
					<span class="step_no">1</span>
					<span class="step_descr">
						Paso 1<br>
						<small>Ingreso Datos</small>
					</span>
				</a>
			</li>
			<li>
				<a href="#step-2" class="done" isdone="1" rel="2">
					<span class="step_no">2</span>
					<span class="step_descr">
						Step 2<br>
						<small>Step 2 description</small>
					</span>
				</a>
			</li>
			<li>
				<a href="#step-3" class="selected" isdone="1" rel="3">
					<span class="step_no">3</span>
					<span class="step_descr">
						Step 3<br>
						<small>Step 3 description</small>
					</span>
				</a>
			</li>
			<li>
				<a href="#step-4" class="disabled" isdone="1" rel="4">
					<span class="step_no">4</span>
					<span class="step_descr">
						Step 4<br>
						<small>Step 4 description</small>
					</span>
				</a>
			</li>
			<li>
				<a href="#step-4" class="disabled" isdone="1" rel="4">
					<span class="step_no">4</span>
					<span class="step_descr">
						Step 4<br>
						<small>Step 4 description</small>
					</span>
				</a>
			</li>
			<li>
				<a href="#step-4" class="disabled" isdone="1" rel="4">
					<span class="step_no">4</span>
					<span class="step_descr">
						Step 4<br>
						<small>Step 4 description</small>
					</span>
				</a>
			</li>
			<li>
				<a href="#step-4" class="disabled" isdone="1" rel="4">
					<span class="step_no">4</span>
					<span class="step_descr">
						Step 4<br>
						<small>Step 4 description</small>
					</span>
				</a>
			</li>
			<li>
				<a href="#step-4" class="disabled" isdone="1" rel="4">
					<span class="step_no">4</span>
					<span class="step_descr">
						Step 4<br>
						<small>Step 4 description</small>
					</span>
				</a>
			</li>

		</ul>

		<div class="container pt-5 pl-5">
			<div class="col-md-12">
				<a class="btn btn-success" style="background-color:white" onclick="iniciarVideo()" id="btnIniciarCamara">Iniciar Cámara Web</a>
			</div>
			<div class="col-md-6" id="panelVideo" hidden>
				<canvas width="350" height="300" autoPlay class="js-canvas"></canvas>
				<div class="col-md-1">
					<video style="position: absolute; top: 0; visibility: hidden; left: 0; opacity: 0"
						   width="350" height="300" autoPlay class="js-video"></video>
				</div>
				<div class="row">
					<div class="col-md-4">
						<a class="btn btn-success btn-block" onclick="capturarImagen()">Capturar	</a>
					</div>
					<div class="col-md-8">
						<a onclick="apagarVideo()" class="btn btn-success btn-block">Apagar Cámara </a>
					</div>
				</div>
			</div>

			<div className="col-md-4" id="panelCaptura" hidden>
				<form >
					<div className="form-group">
						<img src="" id="photo" name="ImagenPersona" />
						<br /><br />
						<button type="submit"
								class="btn btn-success">
							Guardar Imagen
						</button>
						<a class="btn btn-success" onclick="iniciarVideo()">Capturar Otra Imagen</a>
					</div>
				</form>
			</div>

		</div>

	</div>
</div>



@section Scripts {
	<script>
		
	async function iniciarVideo() {
		const btnIniciarCamara = document.getElementById('btnIniciarCamara');
		btnIniciarCamara.hidden = true;
		const panelVideo = document.getElementById('panelVideo');
		panelVideo.hidden = false;
		const panelCaptura = document.getElementById('panelCaptura');
		panelCaptura.hidden = true;
        const videoContainer = document.querySelector('.js-video')
        const canvas = document.querySelector('.js-canvas')
        let photo = document.querySelector('#photo')
        const context = canvas.getContext('2d')
        const video = await navigator.mediaDevices.getUserMedia({ video: true })

        videoContainer.srcObject = video

        const reDraw = async () => {
            context.drawImage(videoContainer, 0, 0, 350, 300)

            requestAnimationFrame(reDraw)
        }
        requestAnimationFrame(reDraw)
	}

	async function apagarVideo() {
		const videoContainer = document.querySelector('.js-video')

        let stream = videoContainer.srcObject;
        let tracks = stream.getTracks()

        await tracks.forEach(function (track) {
            track.stop();
		});

		const btnIniciarCamara = document.getElementById('btnIniciarCamara');
		btnIniciarCamara.hidden = false;
		const panelVideo = document.getElementById('panelVideo');
		panelVideo.hidden = true;
		const panelCaptura = document.getElementById('panelCaptura');
		panelCaptura.hidden = true;
	}

	async function capturarImagen() {
		await apagarVideo();
		const btnIniciarCamara = document.getElementById('btnIniciarCamara');
		btnIniciarCamara.hidden = true;
		const panelVideo = document.getElementById('panelVideo');
		panelVideo.hidden = true;
		const panelCaptura = document.getElementById('panelCaptura');
		panelCaptura.hidden = false;
		const canvas = document.querySelector('.js-canvas')
        let photo = document.querySelector('#photo')
        var data = canvas.toDataURL('image/png');
		photo.setAttribute('src', data);
	}

	</script>
}
